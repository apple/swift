//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2021 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

// This was auto-generated by utils/gen-unicode-data/GenGraphemeBreakProperty,
// please do not edit this file yourself!

#include "../SwiftShims/UnicodeData.h"

static __swift_uint32_t _swift_stdlib_graphemeBreakProperties[610] = {
  0x4000000, 0x420007f, 0x802000a9, 0x2000ad, 0x802000ae, 0x2e000300,
  0x20e00483, 0x25a00591, 0x202005bf, 0x204005c1, 0x204005c4, 0x202005c7,
  0x40c00600, 0x21600610, 0x20061c, 0x22a0064b, 0x20200670, 0x20e006d6,
  0x402006dd, 0x20c006df, 0x204006e7, 0x208006ea, 0x4020070f, 0x20200711,
  0x23600730, 0x216007a6, 0x212007eb, 0x202007fd, 0x20800816, 0x2120081b,
  0x20600825, 0x20a00829, 0x20600859, 0x21e008d3, 0x402008e2, 0x240008e3,
  0x60200903, 0x2020093a, 0x6020093b, 0x2020093c, 0x6060093e, 0x21000941,
  0x60800949, 0x2020094d, 0x6040094e, 0x20e00951, 0x20400962, 0x20200981,
  0x60400982, 0x202009bc, 0x202009be, 0x604009bf, 0x208009c1, 0x604009c7,
  0x604009cb, 0x202009cd, 0x202009d7, 0x204009e2, 0x202009fe, 0x20400a01,
  0x60200a03, 0x20200a3c, 0x60600a3e, 0x20400a41, 0x20400a47, 0x20600a4b,
  0x20200a51, 0x20400a70, 0x20200a75, 0x20400a81, 0x60200a83, 0x20200abc,
  0x60600abe, 0x20a00ac1, 0x20400ac7, 0x60200ac9, 0x60400acb, 0x20200acd,
  0x20400ae2, 0x20c00afa, 0x20200b01, 0x60400b02, 0x20200b3c, 0x20400b3e,
  0x60200b40, 0x20800b41, 0x60400b47, 0x60400b4b, 0x20200b4d, 0x20600b55,
  0x20400b62, 0x20200b82, 0x20200bbe, 0x60200bbf, 0x20200bc0, 0x60400bc1,
  0x60600bc6, 0x60600bca, 0x20200bcd, 0x20200bd7, 0x20200c00, 0x60600c01,
  0x20200c04, 0x20600c3e, 0x60800c41, 0x20600c46, 0x20800c4a, 0x20400c55,
  0x20400c62, 0x20200c81, 0x60400c82, 0x20200cbc, 0x60200cbe, 0x20200cbf,
  0x60400cc0, 0x20200cc2, 0x60400cc3, 0x20200cc6, 0x60400cc7, 0x60400cca,
  0x20400ccc, 0x20400cd5, 0x20400ce2, 0x20400d00, 0x60400d02, 0x20400d3b,
  0x20200d3e, 0x60400d3f, 0x20800d41, 0x60600d46, 0x60600d4a, 0x20200d4d,
  0x40200d4e, 0x20200d57, 0x20400d62, 0x20200d81, 0x60400d82, 0x20200dca,
  0x20200dcf, 0x60400dd0, 0x20600dd2, 0x20200dd6, 0x60e00dd8, 0x20200ddf,
  0x60400df2, 0x20200e31, 0x60200e33, 0x20e00e34, 0x21000e47, 0x20200eb1,
  0x60200eb3, 0x21200eb4, 0x20c00ec8, 0x20400f18, 0x20200f35, 0x20200f37,
  0x20200f39, 0x60400f3e, 0x21c00f71, 0x60200f7f, 0x20a00f80, 0x20400f86,
  0x21600f8d, 0x24800f99, 0x20200fc6, 0x2080102d, 0x60201031, 0x20c01032,
  0x20401039, 0x6040103b, 0x2040103d, 0x60401056, 0x20401058, 0x2060105e,
  0x20801071, 0x20201082, 0x60201084, 0x20401085, 0x2020108d, 0x2020109d,
  0x2060135d, 0x20601712, 0x20601732, 0x20401752, 0x20401772, 0x204017b4,
  0x602017b6, 0x20e017b7, 0x610017be, 0x202017c6, 0x604017c7, 0x216017c9,
  0x202017dd, 0x2060180b, 0x20180e, 0x20401885, 0x202018a9, 0x20601920,
  0x60801923, 0x20401927, 0x60601929, 0x60401930, 0x20201932, 0x60c01933,
  0x20601939, 0x20401a17, 0x60401a19, 0x20201a1b, 0x60201a55, 0x20201a56,
  0x60201a57, 0x20e01a58, 0x20201a60, 0x20201a62, 0x21001a65, 0x60c01a6d,
  0x21401a73, 0x20201a7f, 0x22201ab0, 0x20801b00, 0x60201b04, 0x20e01b34,
  0x60201b3b, 0x20201b3c, 0x60a01b3d, 0x20201b42, 0x60401b43, 0x21201b6b,
  0x20401b80, 0x60201b82, 0x60201ba1, 0x20801ba2, 0x60401ba6, 0x20401ba8,
  0x60201baa, 0x20601bab, 0x20201be6, 0x60201be7, 0x20401be8, 0x60601bea,
  0x20201bed, 0x60201bee, 0x20601bef, 0x60401bf2, 0x61001c24, 0x21001c2c,
  0x60401c34, 0x20401c36, 0x20601cd0, 0x21a01cd4, 0x60201ce1, 0x20e01ce2,
  0x20201ced, 0x20201cf4, 0x60201cf7, 0x20401cf8, 0x27401dc0, 0x20a01dfb,
  0x20200b, 0x2020200c, 0x40200e, 0xe02028, 0x8020203c, 0x80202049, 0x2002060,
  0x242020d0, 0x80202122, 0x80202139, 0x80c02194, 0x804021a9, 0x8040231a,
  0x80202328, 0x80202388, 0x802023cf, 0x816023e9, 0x806023f8, 0x802024c2,
  0x804025aa, 0x802025b6, 0x802025c0, 0x808025fb, 0x80c02600, 0x81802607,
  0x8e402614, 0x8ec02690, 0x81602708, 0x80202714, 0x80202716, 0x8020271d,
  0x80202721, 0x80202728, 0x80402733, 0x80202744, 0x80202747, 0x8020274c,
  0x8020274e, 0x80602753, 0x80202757, 0x80a02763, 0x80602795, 0x802027a1,
  0x802027b0, 0x802027bf, 0x80402934, 0x80602b05, 0x80402b1b, 0x80202b50,
  0x80202b55, 0x20602cef, 0x20202d7f, 0x24002de0, 0x20c0302a, 0x80203030,
  0x8020303d, 0x20403099, 0x80203297, 0x80203299, 0x2080a66f, 0x2140a674,
  0x2040a69e, 0x2040a6f0, 0x2020a802, 0x2020a806, 0x2020a80b, 0x6040a823,
  0x2040a825, 0x6020a827, 0x2020a82c, 0x6040a880, 0x6200a8b4, 0x2040a8c4,
  0x2240a8e0, 0x2020a8ff, 0x2100a926, 0x2160a947, 0x6040a952, 0x2060a980,
  0x6020a983, 0x2020a9b3, 0x6040a9b4, 0x2080a9b6, 0x6040a9ba, 0x2040a9bc,
  0x6060a9be, 0x2020a9e5, 0x20c0aa29, 0x6040aa2f, 0x2040aa31, 0x6040aa33,
  0x2040aa35, 0x2020aa43, 0x2020aa4c, 0x6020aa4d, 0x2020aa7c, 0x2020aab0,
  0x2060aab2, 0x2040aab7, 0x2040aabe, 0x2020aac1, 0x6020aaeb, 0x2040aaec,
  0x6040aaee, 0x6020aaf5, 0x2020aaf6, 0x6040abe3, 0x2020abe5, 0x6040abe6,
  0x2020abe8, 0x6040abe9, 0x6020abec, 0x2020abed, 0x2020fb1e, 0x2200fe00,
  0x2200fe20, 0x20feff, 0x2040ff9e, 0x180fff0, 0x202101fd, 0x202102e0,
  0x20a10376, 0x20610a01, 0x20410a05, 0x20810a0c, 0x20610a38, 0x20210a3f,
  0x20410ae5, 0x20810d24, 0x20410eab, 0x21610f46, 0x60211000, 0x20211001,
  0x60211002, 0x21e11038, 0x2061107f, 0x60211082, 0x606110b0, 0x208110b3,
  0x604110b7, 0x204110b9, 0x402110bd, 0x402110cd, 0x20611100, 0x20a11127,
  0x6021112c, 0x2101112d, 0x60411145, 0x20211173, 0x20411180, 0x60211182,
  0x606111b3, 0x212111b6, 0x604111bf, 0x404111c2, 0x208111c9, 0x602111ce,
  0x202111cf, 0x6061122c, 0x2061122f, 0x60411232, 0x20211234, 0x60211235,
  0x20411236, 0x2021123e, 0x202112df, 0x606112e0, 0x210112e3, 0x20411300,
  0x60411302, 0x2041133b, 0x2021133e, 0x6021133f, 0x20211340, 0x60811341,
  0x60411347, 0x6061134b, 0x20211357, 0x60411362, 0x20e11366, 0x20a11370,
  0x60611435, 0x21011438, 0x60411440, 0x20611442, 0x60211445, 0x20211446,
  0x2021145e, 0x202114b0, 0x604114b1, 0x20c114b3, 0x602114b9, 0x202114ba,
  0x604114bb, 0x202114bd, 0x602114be, 0x204114bf, 0x602114c1, 0x204114c2,
  0x202115af, 0x604115b0, 0x208115b2, 0x608115b8, 0x204115bc, 0x602115be,
  0x204115bf, 0x204115dc, 0x60611630, 0x21011633, 0x6041163b, 0x2021163d,
  0x6021163e, 0x2041163f, 0x202116ab, 0x602116ac, 0x202116ad, 0x604116ae,
  0x20c116b0, 0x602116b6, 0x202116b7, 0x2061171d, 0x60411720, 0x20811722,
  0x60211726, 0x20a11727, 0x6061182c, 0x2121182f, 0x60211838, 0x20411839,
  0x20211930, 0x60a11931, 0x60411937, 0x2041193b, 0x6021193d, 0x2021193e,
  0x4021193f, 0x60211940, 0x40211941, 0x60211942, 0x20211943, 0x606119d1,
  0x208119d4, 0x204119da, 0x608119dc, 0x202119e0, 0x602119e4, 0x21411a01,
  0x20c11a33, 0x60211a39, 0x40211a3a, 0x20811a3b, 0x20211a47, 0x20c11a51,
  0x60411a57, 0x20611a59, 0x40c11a84, 0x21a11a8a, 0x60211a97, 0x20411a98,
  0x60211c2f, 0x20e11c30, 0x20c11c38, 0x60211c3e, 0x20211c3f, 0x22c11c92,
  0x60211ca9, 0x20e11caa, 0x60211cb1, 0x20411cb2, 0x60211cb4, 0x20411cb5,
  0x20c11d31, 0x20211d3a, 0x20411d3c, 0x20e11d3f, 0x40211d46, 0x20211d47,
  0x60a11d8a, 0x20411d90, 0x60411d93, 0x20211d95, 0x60211d96, 0x20211d97,
  0x20411ef3, 0x60411ef5, 0x1213430, 0x20a16af0, 0x20e16b30, 0x20216f4f,
  0x66e16f51, 0x20816f8f, 0x20216fe4, 0x60416ff0, 0x2041bc9d, 0x81bca0,
  0x2021d165, 0x6021d166, 0x2061d167, 0x6021d16d, 0x20a1d16e, 0x101d173,
  0x2101d17b, 0x20e1d185, 0x2081d1aa, 0x2061d242, 0x26e1da00, 0x2641da3b,
  0x2021da75, 0x2021da84, 0x20a1da9b, 0x21e1daa1, 0x20e1e000, 0x2221e008,
  0x20e1e01b, 0x2041e023, 0x20a1e026, 0x20e1e130, 0x2081e2ec, 0x20e1e8d0,
  0x20e1e944, 0xa001f000, 0x8061f10d, 0x8021f12f, 0x80c1f16c, 0x8041f17e,
  0x8021f18e, 0x8141f191, 0x8721f1ad, 0x81e1f201, 0x8021f21a, 0x8021f22f,
  0x8121f232, 0x8081f23c, 0xb641f249, 0x20a1f3fb, 0xa7c1f400, 0xa141f546,
  0x9001f680, 0x8181f774, 0x8561f7d5, 0x8081f80c, 0x8101f848, 0x80c1f85a,
  0x8101f888, 0x8a41f8ae, 0x85e1f90c, 0x8141f93c, 0xb721f947, 0x40e0000,
  0x2c0e0020, 0x100e0080, 0x3e0e0100,
};

SWIFT_RUNTIME_STDLIB_INTERNAL
__swift_uint8_t _swift_stdlib_getGraphemeBreakProperty(__swift_uint32_t scalar) {
  auto low = 0;
  auto high = 610 - 1;

  while (high >= low) {
    auto idx = low + (high - low) / 2;

    auto entry = _swift_stdlib_graphemeBreakProperties[idx];

    // Shift the enum and range count out of the value.
    auto lower = (entry << 11) >> 11;

    // Shift the enum out first, then shift out the scalar value.
    auto upper = lower + ((entry << 3) >> 24);

    // Shift everything out.
    auto enumValue = (__swift_uint8_t)(entry >> 29);

    // Special case: extendedPictographic who used an extra bit for the range.
    if (enumValue == 5) {
      upper = lower + ((entry << 2) >> 23);
    }

    if (scalar >= lower && scalar <= upper) {
      return enumValue;
    }

    if (scalar > upper) {
      low = idx + 1;
      continue;
    }

    if (scalar < lower) {
      high = idx - 1;
      continue;
    }
  }

  // If we made it out here, then our scalar was not found in the grapheme
  // array (this occurs when a scalar doesn't map to any grapheme break
  // property). Return the max value here to indicate .any.
  return 0xFF;
}
