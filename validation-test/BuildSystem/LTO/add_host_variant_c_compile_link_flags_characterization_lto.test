# REQUIRES: standalone_build
# REQUIRES: ninja

# RUN: %empty-directory(%t)
# RUN: mkdir -p %t/build
# RUN: mkdir -p %t/source
# RUN: split-file %s %t/source
# RUN: %{cmake-generate} -DSWIFT_TOOLS_ENABLE_LTO="thin" -DCMAKE_MODULE_PATH=%swift_src_root/cmake/modules -S %t/source -B %t/build
# RUN: %{ninja-dryrun} -C %t/build 2>&1 | %FileCheck --check-prefix=THIN-CHECK %s

# THIN-CHECK: -flto=thin
# THIN-CHECK-SAME: source/hello.c
# THIN-CHECK: -flto=thin
# THIN-CHECK-SAME: placeholder

# RUN: %empty-directory(%t/build)
# RUN: %{cmake-generate} -DSWIFT_TOOLS_ENABLE_LTO="full" -DCMAKE_MODULE_PATH=%swift_src_root/cmake/modules -S %t/source -B %t/build
# RUN: %{ninja-dryrun} -C %t/build 2>&1 | %FileCheck --check-prefix=FULL-CHECK %s

# FULL-CHECK: -flto=full
# FULL-CHECK-SAME: source/hello.c
# FULL-CHECK: -flto=full
# FULL-CHECK-SAME: placeholder

# RUN: %empty-directory(%t/build)
# RUN: %{cmake-generate} -DSWIFT_TOOLS_ENABLE_LTO="" -DCMAKE_MODULE_PATH=%swift_src_root/cmake/modules -S %t/source -B %t/build
# RUN: %{ninja-dryrun} -C %t/build 2>&1 | %FileCheck %s
# RUN: %empty-directory(%t/build)
# RUN: %{cmake-generate} -DCMAKE_MODULE_PATH=%swift_src_root/cmake/modules -S %t/source -B %t/build
# RUN: %{ninja-dryrun} -C %t/build 2>&1 | %FileCheck %s

# CHECK-NOT: -flto=

#--- CMakeLists.txt
cmake_minimum_required(VERSION ${MIN_VERSION})

project(lto_characterization)

include(AddSwift)

set(SWIFT_HOST_VARIANT_SDK "OSX")
set(SWIFT_HOST_VARIANT_ARCH "x86_64")
set(DEPLOYMENT_VERSION "10.9")
set(SWIFT_SDK_OSX_ARCH_X86_64_TRIPLE "x86_64-apple-macos")

add_executable(placeholder hello.c)

_add_host_variant_c_compile_link_flags(placeholder)

#--- hello.c
int main(){}
