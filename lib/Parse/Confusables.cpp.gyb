%# -*- mode: C++ -*-

%# Ignore the following admonition; it applies to the resulting .cpp file only
//// Automatically Generated From Confusables.cpp.gyb.
//// Do Not Edit Directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2015 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See http://swift.org/LICENSE.txt for license information
// See http://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

%{
import re

characters = [
u"(", u")", u"{",
u"}", u"[", u"]",
u".", u",", u":",
u";", u"=", u"@",
u"#", u"&", u"/",
u"|", u"\\", u"-",
u"*", u"+", u">",
u"<", u"!", u"?"
]

hexValues = [ hex(ord(char)) for char in characters ]

modifiedHex = []
for hexString in hexValues:
    noPrefix = hexString[2:]
    modifiedHex.append((((4 - len(noPrefix)) * "0") + noPrefix).upper())

pairs = []
with open('../../utils/UnicodeData/confusables.txt', 'r') as f:
    pattern = re.compile("(.+)\W+;\W+(.+)\W+;")
    for line in f:
        match = pattern.match(line)
        if match != None:
            confusedString = match.group(1).replace(" ", "")
            normalString = match.group(2).replace(" ", "")
            for hexValue in modifiedHex:
                if hexValue == normalString:
                    confused = hex(int(confusedString, 16))
                    normal = hex(int(normalString, 16))
                    pairs.append((confused, normal))
}%

#include "swift/Parse/Confusables.h"

uint32_t swift::confusable::tryConvertConfusableCharacterToASCII(uint32_t codepoint) {
  switch (codepoint) {
% for (confused, expected) in pairs:
  case ${confused}: return ${expected};
% end
  default: return 0;
  }
}
