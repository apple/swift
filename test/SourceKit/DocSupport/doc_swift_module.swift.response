
class C1 : Prot {

    typealias Element = Int

    var p: Int

    func foo()

    subscript(_ index: Int) -> Int { get }

    subscript(index i: Float) -> Int { get }

    func extfoo()

    func foo1()
}

enum MyEnum : Int {

    case Blah

    func distance(to other: Self) -> Int

    func advanced(by n: Int) -> Self

    static func addWithOverflow(_ lhs: Int, _ rhs: Int) -> (Int, overflow: Bool)

    static func subtractWithOverflow(_ lhs: Int, _ rhs: Int) -> (Int, overflow: Bool)

    static func multiplyWithOverflow(_ lhs: Int, _ rhs: Int) -> (Int, overflow: Bool)

    static func divideWithOverflow(_ lhs: Int, _ rhs: Int) -> (Int, overflow: Bool)

    static func remainderWithOverflow(_ lhs: Int, _ rhs: Int) -> (Int, overflow: Bool)

    func toIntMax() -> IntMax

    init(_ v: UInt8)

    init(_ v: Int8)

    init(_ v: UInt16)

    init(_ v: Int16)

    init(_ v: UInt32)

    init(_ v: Int32)

    init(_ v: UInt64)

    init(truncatingBitPattern truncatingBitPattern: UInt64)

    init(_ v: Int64)

    init(truncatingBitPattern truncatingBitPattern: Int64)

    init(_ v: UInt)

    init(bitPattern bitPattern: UInt)

    init(_ other: Float)

    init(_ other: Double)

    init(_ other: Float80)

    init?(_ text: String, radix radix: Int = default)

    init(_ objectID: ObjectIdentifier)
}

extension MyEnum : CustomStringConvertible {

    var description: String { get }
}

extension MyEnum : Hashable {

    var hashValue: Int { get }
}

extension MyEnum : SignedNumber {
}

extension MyEnum : BitwiseOperations {

    static var allZeros: Int { get }
}

extension MyEnum : CustomReflectable {

    var customMirror: Mirror { get }
}

extension MyEnum : CustomPlaygroundQuickLookable {

    var customPlaygroundQuickLook: PlaygroundQuickLook { get }
}

extension MyEnum : CVarArg {
}

@objc protocol P2 {

    optional func foo1()
}

protocol Prot {

    associatedtype Element

    var p: Int { get }

    func foo()

    func foo1()
}

extension Prot {

    func foo1()
}

extension Prot where Self.Element == Int {

    func extfoo()
}

struct S1 {

    enum SE {

        case a

        case b

        case c
    }

    func foo1()

    struct S2 {

        let b: Int
    }
}

func genfoo<T1 : Prot, T2 : cake.C1 where T1.Element == Int, T2.Element == T1.Element>(x ix: T1, y iy: T2)


[
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Prot",
    key.usr: "s:P4cake4Prot",
    key.offset: 12,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 24,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 34,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 44,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 53,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 57,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 60,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 69,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 74,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 85,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 95,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 97,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 97,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 104,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 112,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 118,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 129,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 139,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 145,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 139,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 145,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Float",
    key.usr: "s:Sf",
    key.offset: 148,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 158,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 164,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 175,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 180,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 194,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 199,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 209,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 214,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 223,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 234,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 239,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 249,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 254,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 263,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 266,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 263,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 266,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "Self",
    key.usr: "s:tPs13SignedInteger4SelfMx",
    key.offset: 273,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 282,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 291,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 296,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 305,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 308,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 305,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 308,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 311,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "Self",
    key.usr: "s:tPs13SignedInteger4SelfMx",
    key.offset: 319,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 329,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 336,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 341,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 357,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 359,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 359,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 364,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 369,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 371,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 371,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 376,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 385,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 390,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 400,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 411,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 418,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 423,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 444,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 446,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 446,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 451,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 456,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 458,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 458,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 463,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 472,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 477,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 487,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 498,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 505,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 510,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 531,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 533,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 533,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 538,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 543,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 545,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 545,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 550,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 559,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 564,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 574,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 585,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 592,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 597,
    key.length: 18
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 616,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 618,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 618,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 623,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 628,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 630,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 630,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 635,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 644,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 649,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 659,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 670,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 677,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 682,
    key.length: 21
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 704,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 706,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 706,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 711,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 716,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 718,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 718,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 723,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 732,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 737,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 747,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 758,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 763,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.typealias,
    key.name: "IntMax",
    key.usr: "s:s6IntMax",
    key.offset: 777,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 789,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 794,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 796,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 796,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt8",
    key.usr: "s:Vs5UInt8",
    key.offset: 799,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 811,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 816,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 818,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 818,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int8",
    key.usr: "s:Vs4Int8",
    key.offset: 821,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 832,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 837,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 839,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 839,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt16",
    key.usr: "s:Vs6UInt16",
    key.offset: 842,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 855,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 860,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 862,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 862,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int16",
    key.usr: "s:Vs5Int16",
    key.offset: 865,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 877,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 882,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 884,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 884,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:Vs6UInt32",
    key.offset: 887,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 900,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 905,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 907,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 907,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:Vs5Int32",
    key.offset: 910,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 922,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 927,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 929,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 929,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt64",
    key.usr: "s:Vs6UInt64",
    key.offset: 932,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 945,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 950,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 971,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 950,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 971,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt64",
    key.usr: "s:Vs6UInt64",
    key.offset: 993,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1006,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1011,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1013,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1013,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int64",
    key.usr: "s:Vs5Int64",
    key.offset: 1016,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1028,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1033,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1054,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1033,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1054,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int64",
    key.usr: "s:Vs5Int64",
    key.offset: 1076,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1088,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1093,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1095,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1095,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt",
    key.usr: "s:Su",
    key.offset: 1098,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1109,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1114,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1125,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1114,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1125,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt",
    key.usr: "s:Su",
    key.offset: 1137,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1148,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1153,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1155,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1155,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Float",
    key.usr: "s:Sf",
    key.offset: 1162,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1174,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1179,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1181,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1181,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Double",
    key.usr: "s:Sd",
    key.offset: 1188,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1201,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1206,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1208,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1208,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Float80",
    key.usr: "s:Vs7Float80",
    key.offset: 1215,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1229,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1235,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1237,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1237,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "String",
    key.usr: "s:SS",
    key.offset: 1243,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1251,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1257,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1251,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1257,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 1264,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1270,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1284,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1289,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1291,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1291,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "ObjectIdentifier",
    key.usr: "s:Vs16ObjectIdentifier",
    key.offset: 1301,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1322,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "MyEnum",
    key.usr: "s:O4cake6MyEnum",
    key.offset: 1332,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "CustomStringConvertible",
    key.usr: "s:Ps23CustomStringConvertible",
    key.offset: 1341,
    key.length: 23
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1372,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1376,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "String",
    key.usr: "s:SS",
    key.offset: 1389,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1398,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1407,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "MyEnum",
    key.usr: "s:O4cake6MyEnum",
    key.offset: 1417,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Hashable",
    key.usr: "s:Ps8Hashable",
    key.offset: 1426,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1442,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1446,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 1457,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1463,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1472,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "MyEnum",
    key.usr: "s:O4cake6MyEnum",
    key.offset: 1482,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "SignedNumber",
    key.usr: "s:Ps12SignedNumber",
    key.offset: 1491,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1509,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "MyEnum",
    key.usr: "s:O4cake6MyEnum",
    key.offset: 1519,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "BitwiseOperations",
    key.usr: "s:Ps17BitwiseOperations",
    key.offset: 1528,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1553,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1560,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1564,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 1574,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1580,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1589,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "MyEnum",
    key.usr: "s:O4cake6MyEnum",
    key.offset: 1599,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "CustomReflectable",
    key.usr: "s:Ps17CustomReflectable",
    key.offset: 1608,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1633,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1637,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Mirror",
    key.usr: "s:Vs6Mirror",
    key.offset: 1651,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1660,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1669,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "MyEnum",
    key.usr: "s:O4cake6MyEnum",
    key.offset: 1679,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "CustomPlaygroundQuickLookable",
    key.usr: "s:Ps29CustomPlaygroundQuickLookable",
    key.offset: 1688,
    key.length: 29
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1725,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1729,
    key.length: 25
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "PlaygroundQuickLook",
    key.usr: "s:Os19PlaygroundQuickLook",
    key.offset: 1756,
    key.length: 19
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1778,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1787,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "MyEnum",
    key.usr: "s:O4cake6MyEnum",
    key.offset: 1797,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "CVarArg",
    key.usr: "s:Ps7CVarArg",
    key.offset: 1806,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1819,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1825,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1834,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1844,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1853,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1858,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1868,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1877,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1889,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1904,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1917,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1921,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 1924,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1930,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1941,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1946,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1957,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1962,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1972,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Prot",
    key.usr: "s:P4cake4Prot",
    key.offset: 1982,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1994,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1999,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2009,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Prot",
    key.usr: "s:P4cake4Prot",
    key.offset: 2019,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2024,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2030,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2035,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2046,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2057,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2062,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2074,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2081,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2091,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2096,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2110,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2115,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2126,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2131,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2142,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2147,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2160,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2165,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2177,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2184,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2198,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2202,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 2205,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2218,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2223,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2230,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Prot",
    key.usr: "s:P4cake4Prot",
    key.offset: 2235,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2241,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2246,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "C1",
    key.usr: "s:C4cake2C1",
    key.offset: 2251,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2254,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2260,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2263,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2274,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2279,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2282,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2293,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2296,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2305,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2307,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2305,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2307,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2311,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2315,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2317,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2315,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2317,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2321,
    key.length: 2
  }
]
[
  {
    key.kind: source.lang.swift.decl.class,
    key.name: "C1",
    key.usr: "s:C4cake2C1",
    key.offset: 1,
    key.length: 206,
    key.fully_annotated_decl: "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>C1</decl.name> : <ref.protocol usr=\"s:P4cake4Prot\">Prot</ref.protocol></decl.class>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "Prot",
        key.usr: "s:P4cake4Prot"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.typealias,
        key.name: "Element",
        key.usr: "s:C4cake2C17Element",
        key.offset: 24,
        key.length: 23,
        key.fully_annotated_decl: "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>Element</decl.name> = <ref.struct usr=\"s:Si\">Int</ref.struct></decl.typealias>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.associatedtype,
            key.name: "Element",
            key.usr: "s:P4cake4Prot7Element"
          },
          {
            key.kind: source.lang.swift.ref.associatedtype,
            key.name: "Element",
            key.usr: "s:P4cake4Prot7Element"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "p",
        key.usr: "s:vC4cake2C11pSi",
        key.offset: 53,
        key.length: 10,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>p</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.var.instance,
            key.name: "p",
            key.usr: "s:vP4cake4Prot1pSi"
          },
          {
            key.kind: source.lang.swift.ref.var.instance,
            key.name: "p",
            key.usr: "s:vP4cake4Prot1pSi"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo()",
        key.usr: "s:FC4cake2C13fooFT_T_",
        key.offset: 69,
        key.length: 10,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo</decl.name>()</decl.function.method.instance>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.function.method.instance,
            key.name: "foo()",
            key.usr: "s:FP4cake4Prot3fooFT_T_"
          },
          {
            key.kind: source.lang.swift.ref.function.method.instance,
            key.name: "foo()",
            key.usr: "s:FP4cake4Prot3fooFT_T_"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.subscript,
        key.name: "subscript(_:)",
        key.usr: "s:iC4cake2C19subscriptFSiSi",
        key.offset: 85,
        key.length: 38,
        key.fully_annotated_decl: "<decl.function.subscript><syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>index</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "index",
            key.offset: 104,
            key.length: 3
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.subscript,
        key.name: "subscript(index:)",
        key.usr: "s:iC4cake2C19subscriptFT5indexSf_Si",
        key.offset: 129,
        key.length: 40,
        key.fully_annotated_decl: "<decl.function.subscript><syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "index",
            key.name: "i",
            key.offset: 148,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "extfoo()",
        key.usr: "s:Fe4cakeRxS_4Protwx7ElementzSirS0_6extfooFT_T_::SYNTHESIZED::s:C4cake2C1",
        key.original_usr: "s:Fe4cakeRxS_4Protwx7ElementzSirS0_6extfooFT_T_",
        key.offset: 175,
        key.length: 13,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>extfoo</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo1()",
        key.usr: "s:FE4cakePS_4Prot4foo1FT_T_::SYNTHESIZED::s:C4cake2C1",
        key.original_usr: "s:FE4cakePS_4Prot4foo1FT_T_",
        key.offset: 194,
        key.length: 11,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo1</decl.name>()</decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.enum,
    key.name: "MyEnum",
    key.usr: "s:O4cake6MyEnum",
    key.offset: 209,
    key.length: 1111,
    key.fully_annotated_decl: "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>MyEnum</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>",
    key.inherits: [
      {
        key.kind: source.lang.swift.ref.struct,
        key.name: "Int",
        key.usr: "s:Si"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.enumelement,
        key.name: "Blah",
        key.usr: "s:FO4cake6MyEnum4BlahFMS0_S0_",
        key.offset: 234,
        key.length: 9,
        key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>Blah</decl.name></decl.enumelement>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "distance(to:)",
        key.usr: "s:FEsPs13SignedInteger8distanceFT2tox_Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FEsPs13SignedInteger8distanceFT2tox_Si",
        key.offset: 249,
        key.length: 36,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>distance</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:tPs13SignedInteger4SelfMx\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int</ref.struct></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "to",
            key.name: "other",
            key.offset: 273,
            key.length: 4
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "advanced(by:)",
        key.usr: "s:FEsPs13SignedInteger8advancedFT2bySi_x::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FEsPs13SignedInteger8advancedFT2bySi_x",
        key.offset: 291,
        key.length: 32,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>advanced</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>by</decl.var.parameter.argument_label> <decl.var.parameter.name>n</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:tPs13SignedInteger4SelfMx\">Self</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "by",
            key.name: "n",
            key.offset: 311,
            key.length: 3
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.static,
        key.name: "addWithOverflow(_:_:)",
        key.usr: "s:ZFSi15addWithOverflowFTSiSi_TSi8overflowSb_::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:ZFSi15addWithOverflowFTSiSi_TSi8overflowSb_",
<<<<<<< HEAD
        key.doc.full_as_xml: "<Function><Name>addWithOverflow(_:_:)</Name><USR>s:ZFSi15addWithOverflowFTSiSi_TSi8overflowSb_</USR><Declaration>static func addWithOverflow(lhs: Int, _ rhs: Int) -&gt; (Int, overflow: Bool)</Declaration><Abstract><Para>Add <codeVoice>lhs</codeVoice> and <codeVoice>rhs</codeVoice>, returning a result and a <codeVoice>Bool</codeVoice> that is <codeVoice>true</codeVoice> iff the operation caused an arithmetic overflow.</Para></Abstract></Function>",
        key.offset: 329,
=======
        key.doc.full_as_xml: "<Function><Name>addWithOverflow(_:_:)</Name><USR>s:ZFSi15addWithOverflowFTSiSi_TSi8overflowSb_</USR><Declaration>static func addWithOverflow(_ lhs: Int, _ rhs: Int) -&gt; (Int, overflow: Bool)</Declaration><Abstract><Para>Add <codeVoice>lhs</codeVoice> and <codeVoice>rhs</codeVoice>, returning a result and a <codeVoice>Bool</codeVoice> that is <codeVoice>true</codeVoice> iff the operation caused an arithmetic overflow.</Para></Abstract></Function>",
        key.offset: 249,
>>>>>>> master
        key.length: 76,
        key.fully_annotated_decl: "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addWithOverflow</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>overflow</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.function.method.static>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.function.method.static,
            key.name: "addWithOverflow(_:_:)",
            key.usr: "s:ZFPs18_IntegerArithmetic15addWithOverflowFTxx_Tx8overflowSb_"
          }
        ],
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 364,
            key.length: 3
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 376,
            key.length: 3
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.static,
        key.name: "subtractWithOverflow(_:_:)",
        key.usr: "s:ZFSi20subtractWithOverflowFTSiSi_TSi8overflowSb_::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:ZFSi20subtractWithOverflowFTSiSi_TSi8overflowSb_",
<<<<<<< HEAD
        key.doc.full_as_xml: "<Function><Name>subtractWithOverflow(_:_:)</Name><USR>s:ZFSi20subtractWithOverflowFTSiSi_TSi8overflowSb_</USR><Declaration>static func subtractWithOverflow(lhs: Int, _ rhs: Int) -&gt; (Int, overflow: Bool)</Declaration><Abstract><Para>Subtract <codeVoice>lhs</codeVoice> and <codeVoice>rhs</codeVoice>, returning a result and a <codeVoice>Bool</codeVoice> that is <codeVoice>true</codeVoice> iff the operation caused an arithmetic overflow.</Para></Abstract></Function>",
        key.offset: 411,
=======
        key.doc.full_as_xml: "<Function><Name>subtractWithOverflow(_:_:)</Name><USR>s:ZFSi20subtractWithOverflowFTSiSi_TSi8overflowSb_</USR><Declaration>static func subtractWithOverflow(_ lhs: Int, _ rhs: Int) -&gt; (Int, overflow: Bool)</Declaration><Abstract><Para>Subtract <codeVoice>lhs</codeVoice> and <codeVoice>rhs</codeVoice>, returning a result and a <codeVoice>Bool</codeVoice> that is <codeVoice>true</codeVoice> iff the operation caused an arithmetic overflow.</Para></Abstract></Function>",
        key.offset: 331,
>>>>>>> master
        key.length: 81,
        key.fully_annotated_decl: "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>subtractWithOverflow</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>overflow</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.function.method.static>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.function.method.static,
            key.name: "subtractWithOverflow(_:_:)",
            key.usr: "s:ZFPs18_IntegerArithmetic20subtractWithOverflowFTxx_Tx8overflowSb_"
          }
        ],
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 451,
            key.length: 3
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 463,
            key.length: 3
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.static,
        key.name: "multiplyWithOverflow(_:_:)",
        key.usr: "s:ZFSi20multiplyWithOverflowFTSiSi_TSi8overflowSb_::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:ZFSi20multiplyWithOverflowFTSiSi_TSi8overflowSb_",
<<<<<<< HEAD
        key.doc.full_as_xml: "<Function><Name>multiplyWithOverflow(_:_:)</Name><USR>s:ZFSi20multiplyWithOverflowFTSiSi_TSi8overflowSb_</USR><Declaration>static func multiplyWithOverflow(lhs: Int, _ rhs: Int) -&gt; (Int, overflow: Bool)</Declaration><Abstract><Para>Multiply <codeVoice>lhs</codeVoice> and <codeVoice>rhs</codeVoice>, returning a result and a <codeVoice>Bool</codeVoice> that is <codeVoice>true</codeVoice> iff the operation caused an arithmetic overflow.</Para></Abstract></Function>",
        key.offset: 498,
=======
        key.doc.full_as_xml: "<Function><Name>multiplyWithOverflow(_:_:)</Name><USR>s:ZFSi20multiplyWithOverflowFTSiSi_TSi8overflowSb_</USR><Declaration>static func multiplyWithOverflow(_ lhs: Int, _ rhs: Int) -&gt; (Int, overflow: Bool)</Declaration><Abstract><Para>Multiply <codeVoice>lhs</codeVoice> and <codeVoice>rhs</codeVoice>, returning a result and a <codeVoice>Bool</codeVoice> that is <codeVoice>true</codeVoice> iff the operation caused an arithmetic overflow.</Para></Abstract></Function>",
        key.offset: 418,
>>>>>>> master
        key.length: 81,
        key.fully_annotated_decl: "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>multiplyWithOverflow</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>overflow</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.function.method.static>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.function.method.static,
            key.name: "multiplyWithOverflow(_:_:)",
            key.usr: "s:ZFPs18_IntegerArithmetic20multiplyWithOverflowFTxx_Tx8overflowSb_"
          }
        ],
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 538,
            key.length: 3
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 550,
            key.length: 3
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.static,
        key.name: "divideWithOverflow(_:_:)",
        key.usr: "s:ZFSi18divideWithOverflowFTSiSi_TSi8overflowSb_::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:ZFSi18divideWithOverflowFTSiSi_TSi8overflowSb_",
<<<<<<< HEAD
        key.doc.full_as_xml: "<Function><Name>divideWithOverflow(_:_:)</Name><USR>s:ZFSi18divideWithOverflowFTSiSi_TSi8overflowSb_</USR><Declaration>static func divideWithOverflow(lhs: Int, _ rhs: Int) -&gt; (Int, overflow: Bool)</Declaration><Abstract><Para>Divide <codeVoice>lhs</codeVoice> and <codeVoice>rhs</codeVoice>, returning a result and a <codeVoice>Bool</codeVoice> that is <codeVoice>true</codeVoice> iff the operation caused an arithmetic overflow.</Para></Abstract></Function>",
        key.offset: 585,
=======
        key.doc.full_as_xml: "<Function><Name>divideWithOverflow(_:_:)</Name><USR>s:ZFSi18divideWithOverflowFTSiSi_TSi8overflowSb_</USR><Declaration>static func divideWithOverflow(_ lhs: Int, _ rhs: Int) -&gt; (Int, overflow: Bool)</Declaration><Abstract><Para>Divide <codeVoice>lhs</codeVoice> and <codeVoice>rhs</codeVoice>, returning a result and a <codeVoice>Bool</codeVoice> that is <codeVoice>true</codeVoice> iff the operation caused an arithmetic overflow.</Para></Abstract></Function>",
        key.offset: 505,
>>>>>>> master
        key.length: 79,
        key.fully_annotated_decl: "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>divideWithOverflow</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>overflow</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.function.method.static>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.function.method.static,
            key.name: "divideWithOverflow(_:_:)",
            key.usr: "s:ZFPs18_IntegerArithmetic18divideWithOverflowFTxx_Tx8overflowSb_"
          }
        ],
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 623,
            key.length: 3
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 635,
            key.length: 3
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.static,
        key.name: "remainderWithOverflow(_:_:)",
        key.usr: "s:ZFSi21remainderWithOverflowFTSiSi_TSi8overflowSb_::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:ZFSi21remainderWithOverflowFTSiSi_TSi8overflowSb_",
<<<<<<< HEAD
        key.doc.full_as_xml: "<Function><Name>remainderWithOverflow(_:_:)</Name><USR>s:ZFSi21remainderWithOverflowFTSiSi_TSi8overflowSb_</USR><Declaration>static func remainderWithOverflow(lhs: Int, _ rhs: Int) -&gt; (Int, overflow: Bool)</Declaration><Abstract><Para>Divide <codeVoice>lhs</codeVoice> and <codeVoice>rhs</codeVoice>, returning the remainder and a <codeVoice>Bool</codeVoice> that is <codeVoice>true</codeVoice> iff the operation caused an arithmetic overflow.</Para></Abstract></Function>",
        key.offset: 670,
=======
        key.doc.full_as_xml: "<Function><Name>remainderWithOverflow(_:_:)</Name><USR>s:ZFSi21remainderWithOverflowFTSiSi_TSi8overflowSb_</USR><Declaration>static func remainderWithOverflow(_ lhs: Int, _ rhs: Int) -&gt; (Int, overflow: Bool)</Declaration><Abstract><Para>Divide <codeVoice>lhs</codeVoice> and <codeVoice>rhs</codeVoice>, returning the remainder and a <codeVoice>Bool</codeVoice> that is <codeVoice>true</codeVoice> iff the operation caused an arithmetic overflow.</Para></Abstract></Function>",
        key.offset: 590,
>>>>>>> master
        key.length: 82,
        key.fully_annotated_decl: "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>remainderWithOverflow</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>overflow</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.function.method.static>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.function.method.static,
            key.name: "remainderWithOverflow(_:_:)",
            key.usr: "s:ZFPs18_IntegerArithmetic21remainderWithOverflowFTxx_Tx8overflowSb_"
          }
        ],
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 711,
            key.length: 3
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 723,
            key.length: 3
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "toIntMax()",
        key.usr: "s:FSi8toIntMaxFT_Vs5Int64::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSi8toIntMaxFT_Vs5Int64",
        key.doc.full_as_xml: "<Function><Name>toIntMax()</Name><USR>s:FSi8toIntMaxFT_Vs5Int64</USR><Declaration>func toIntMax() -&gt; IntMax</Declaration><Abstract><Para>Represent this number using Swift&apos;s widest native signed integer type.</Para></Abstract></Function>",
        key.offset: 758,
        key.length: 25,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toIntMax</decl.name>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:s6IntMax\">IntMax</ref.typealias></decl.function.returntype></decl.function.method.instance>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.function.method.instance,
            key.name: "toIntMax()",
            key.usr: "s:FPs17IntegerArithmetic8toIntMaxFT_Vs5Int64"
          },
          {
            key.kind: source.lang.swift.ref.function.method.instance,
            key.name: "toIntMax()",
            key.usr: "s:FPs13SignedInteger8toIntMaxFT_Vs5Int64"
          },
          {
            key.kind: source.lang.swift.ref.function.method.instance,
            key.name: "toIntMax()",
            key.usr: "s:FPs14_SignedInteger8toIntMaxFT_Vs5Int64"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFVs5UInt8Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFVs5UInt8Si",
        key.offset: 789,
        key.length: 16,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>v</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Vs5UInt8\">UInt8</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "v",
            key.offset: 799,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFVs4Int8Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFVs4Int8Si",
        key.offset: 811,
        key.length: 15,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>v</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Vs4Int8\">Int8</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "v",
            key.offset: 821,
            key.length: 4
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFVs6UInt16Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFVs6UInt16Si",
        key.offset: 832,
        key.length: 17,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>v</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Vs6UInt16\">UInt16</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "v",
            key.offset: 842,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFVs5Int16Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFVs5Int16Si",
        key.offset: 855,
        key.length: 16,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>v</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Vs5Int16\">Int16</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "v",
            key.offset: 865,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFVs6UInt32Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFVs6UInt32Si",
        key.offset: 877,
        key.length: 17,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>v</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Vs6UInt32\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "v",
            key.offset: 887,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFVs5Int32Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFVs5Int32Si",
        key.offset: 900,
        key.length: 16,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>v</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Vs5Int32\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "v",
            key.offset: 910,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFVs6UInt64Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFVs6UInt64Si",
        key.offset: 922,
        key.length: 17,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>v</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Vs6UInt64\">UInt64</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "v",
            key.offset: 932,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(truncatingBitPattern:)",
        key.usr: "s:FSicFT20truncatingBitPatternVs6UInt64_Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFT20truncatingBitPatternVs6UInt64_Si",
        key.doc.full_as_xml: "<Function><Name>init(truncatingBitPattern:)</Name><USR>s:FSicFT20truncatingBitPatternVs6UInt64_Si</USR><Declaration>init(truncatingBitPattern: UInt64)</Declaration><Abstract><Para>Construct a <codeVoice>Int</codeVoice> having the same bitwise representation as the least significant bits of the provided bit pattern.</Para></Abstract><Discussion><Para>No range or overflow checking occurs.</Para></Discussion></Function>",
        key.offset: 945,
        key.length: 55,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>truncatingBitPattern</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Vs6UInt64\">UInt64</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "truncatingBitPattern",
            key.name: "truncatingBitPattern",
            key.offset: 993,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFVs5Int64Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFVs5Int64Si",
        key.offset: 1006,
        key.length: 16,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>v</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Vs5Int64\">Int64</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.function.constructor,
            key.name: "init(_:)",
            key.usr: "s:FPs13SignedIntegercFVs5Int64x"
          },
          {
            key.kind: source.lang.swift.ref.function.constructor,
            key.name: "init(_:)",
            key.usr: "s:FPs14_SignedIntegercFVs5Int64x"
          }
        ],
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "v",
            key.offset: 1016,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(truncatingBitPattern:)",
        key.usr: "s:FSicFT20truncatingBitPatternVs5Int64_Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFT20truncatingBitPatternVs5Int64_Si",
        key.doc.full_as_xml: "<Function><Name>init(truncatingBitPattern:)</Name><USR>s:FSicFT20truncatingBitPatternVs5Int64_Si</USR><Declaration>init(truncatingBitPattern: Int64)</Declaration><Abstract><Para>Construct a <codeVoice>Int</codeVoice> having the same bitwise representation as the least significant bits of the provided bit pattern.</Para></Abstract><Discussion><Para>No range or overflow checking occurs.</Para></Discussion></Function>",
        key.offset: 1028,
        key.length: 54,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>truncatingBitPattern</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Vs5Int64\">Int64</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "truncatingBitPattern",
            key.name: "truncatingBitPattern",
            key.offset: 1076,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFSuSi::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFSuSi",
        key.offset: 1088,
        key.length: 15,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>v</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "v",
            key.offset: 1098,
            key.length: 4
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(bitPattern:)",
        key.usr: "s:FSicFT10bitPatternSu_Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFT10bitPatternSu_Si",
        key.doc.full_as_xml: "<Function><Name>init(bitPattern:)</Name><USR>s:FSicFT10bitPatternSu_Si</USR><Declaration>init(bitPattern: UInt)</Declaration><Abstract><Para>Construct a <codeVoice>Int</codeVoice> having the same memory representation as the <codeVoice>UInt</codeVoice> <codeVoice>bitPattern</codeVoice>.  No range or overflow checking occurs, and the resulting <codeVoice>Int</codeVoice> may not have the same numeric value as <codeVoice>bitPattern</codeVoice>--it is only guaranteed to use the same pattern of bits.</Para></Abstract></Function>",
        key.offset: 1109,
        key.length: 33,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>bitPattern</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "bitPattern",
            key.name: "bitPattern",
            key.offset: 1137,
            key.length: 4
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFSfSi::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFSfSi",
        key.doc.full_as_xml: "<Function><Name>init(_:)</Name><USR>s:FSicFSfSi</USR><Declaration>init(_ other: Float)</Declaration><Abstract><Para>Construct an instance that approximates <codeVoice>other</codeVoice>.</Para></Abstract></Function>",
        key.offset: 1148,
        key.length: 20,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "other",
            key.offset: 1162,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFSdSi::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFSdSi",
        key.doc.full_as_xml: "<Function><Name>init(_:)</Name><USR>s:FSicFSdSi</USR><Declaration>init(_ other: Double)</Declaration><Abstract><Para>Construct an instance that approximates <codeVoice>other</codeVoice>.</Para></Abstract></Function>",
        key.offset: 1174,
        key.length: 21,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "other",
            key.offset: 1188,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFVs7Float80Si::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFVs7Float80Si",
        key.doc.full_as_xml: "<Function><Name>init(_:)</Name><USR>s:FSicFVs7Float80Si</USR><Declaration>init(_ other: Float80)</Declaration><Abstract><Para>Construct an instance that approximates <codeVoice>other</codeVoice>.</Para></Abstract></Function>",
        key.offset: 1201,
        key.length: 22,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Vs7Float80\">Float80</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "other",
            key.offset: 1215,
            key.length: 7
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:radix:)",
        key.usr: "s:FSicFTSS5radixSi_GSqSi_::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFTSS5radixSi_GSqSi_",
        key.doc.full_as_xml: "<Function><Name>init(_:radix:)</Name><USR>s:FSicFTSS5radixSi_GSqSi_</USR><Declaration>init?(_ text: String, radix: Int = default)</Declaration><Abstract><Para>Construct from an ASCII representation in the given <codeVoice>radix</codeVoice>.</Para></Abstract><Discussion><Para>If <codeVoice>text</codeVoice> does not match the regular expression &quot;[+-]?[0-9a-zA-Z]+&quot;, or the value it denotes in the given <codeVoice>radix</codeVoice> is not representable, the result is <codeVoice>nil</codeVoice>.</Para></Discussion></Function>",
        key.offset: 1229,
        key.length: 49,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>text</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>radix</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "text",
            key.offset: 1243,
            key.length: 6
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "radix",
            key.name: "radix",
            key.offset: 1264,
            key.length: 3
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:FSicFVs16ObjectIdentifierSi::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:FSicFVs16ObjectIdentifierSi",
        key.doc.full_as_xml: "<Function><Name>init(_:)</Name><USR>s:FSicFVs16ObjectIdentifierSi</USR><Declaration>init(_ objectID: ObjectIdentifier)</Declaration><Abstract><Para>Create an <codeVoice>Int</codeVoice> that captures the full value of <codeVoice>objectID</codeVoice>.</Para></Abstract></Function>",
        key.offset: 1284,
        key.length: 34,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>objectID</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Vs16ObjectIdentifier\">ObjectIdentifier</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "objectID",
            key.offset: 1301,
            key.length: 16
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.enum,
    key.offset: 1322,
    key.length: 83,
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "CustomStringConvertible",
        key.usr: "s:Ps23CustomStringConvertible"
      }
    ],
    key.extends: {
      key.kind: source.lang.swift.ref.enum,
      key.name: "MyEnum",
      key.usr: "s:O4cake6MyEnum"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "description",
        key.usr: "s:vSi11descriptionSS::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:vSi11descriptionSS",
        key.doc.full_as_xml: "<Other><Name>description</Name><USR>s:vSi11descriptionSS</USR><Declaration>var description: String { get }</Declaration><Abstract><Para>A textual representation of <codeVoice>self</codeVoice>.</Para></Abstract></Other>",
        key.offset: 1372,
        key.length: 31,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.var.instance,
            key.name: "description",
            key.usr: "s:vPs23CustomStringConvertible11descriptionSS"
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.enum,
    key.offset: 1407,
    key.length: 63,
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "Hashable",
        key.usr: "s:Ps8Hashable"
      }
    ],
    key.extends: {
      key.kind: source.lang.swift.ref.enum,
      key.name: "MyEnum",
      key.usr: "s:O4cake6MyEnum"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "hashValue",
        key.usr: "s:vSi9hashValueSi::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:vSi9hashValueSi",
        key.doc.full_as_xml: "<Other><Name>hashValue</Name><USR>s:vSi9hashValueSi</USR><Declaration>var hashValue: Int { get }</Declaration><Abstract><Para>The hash value.</Para></Abstract><Discussion><Para><bold>Axiom:</bold> <codeVoice>x == y</codeVoice> implies <codeVoice>x.hashValue == y.hashValue</codeVoice>.</Para><Note><Para>The hash value is not guaranteed to be stable across different invocations of the same program.  Do not persist the hash value across program runs.</Para></Note></Discussion></Other>",
        key.offset: 1442,
        key.length: 26,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>hashValue</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.var.instance,
            key.name: "hashValue",
            key.usr: "s:vPs8Hashable9hashValueSi"
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.enum,
    key.offset: 1472,
    key.length: 35,
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "SignedNumber",
        key.usr: "s:Ps12SignedNumber"
      }
    ],
    key.extends: {
      key.kind: source.lang.swift.ref.enum,
      key.name: "MyEnum",
      key.usr: "s:O4cake6MyEnum"
    }
  },
  {
    key.kind: source.lang.swift.decl.extension.enum,
    key.offset: 1509,
    key.length: 78,
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "BitwiseOperations",
        key.usr: "s:Ps17BitwiseOperations"
      }
    ],
    key.extends: {
      key.kind: source.lang.swift.ref.enum,
      key.name: "MyEnum",
      key.usr: "s:O4cake6MyEnum"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.static,
        key.name: "allZeros",
        key.usr: "s:ZvSi8allZerosSi::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:ZvSi8allZerosSi",
        key.doc.full_as_xml: "<Other><Name>allZeros</Name><USR>s:ZvSi8allZerosSi</USR><Declaration>static var allZeros: Int { get }</Declaration><Abstract><Para>The empty bitset of type Int.</Para></Abstract></Other>",
        key.offset: 1553,
        key.length: 32,
        key.fully_annotated_decl: "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>allZeros</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.var.static,
            key.name: "allZeros",
            key.usr: "s:ZvPs17BitwiseOperations8allZerosx"
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.enum,
    key.offset: 1589,
    key.length: 78,
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "CustomReflectable",
        key.usr: "s:Ps17CustomReflectable"
      }
    ],
    key.extends: {
      key.kind: source.lang.swift.ref.enum,
      key.name: "MyEnum",
      key.usr: "s:O4cake6MyEnum"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "customMirror",
        key.usr: "s:vSi12customMirrorVs6Mirror::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:vSi12customMirrorVs6Mirror",
        key.doc.full_as_xml: "<Other><Name>customMirror</Name><USR>s:vSi12customMirrorVs6Mirror</USR><Declaration>var customMirror: Mirror { get }</Declaration><Abstract><Para>Returns a mirror that reflects <codeVoice>self</codeVoice>.</Para></Abstract></Other>",
        key.offset: 1633,
        key.length: 32,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>customMirror</decl.name>: <decl.var.type><ref.struct usr=\"s:Vs6Mirror\">Mirror</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.var.instance,
            key.name: "customMirror",
            key.usr: "s:vPs17CustomReflectable12customMirrorVs6Mirror"
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.enum,
    key.offset: 1669,
    key.length: 116,
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "CustomPlaygroundQuickLookable",
        key.usr: "s:Ps29CustomPlaygroundQuickLookable"
      }
    ],
    key.extends: {
      key.kind: source.lang.swift.ref.enum,
      key.name: "MyEnum",
      key.usr: "s:O4cake6MyEnum"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "customPlaygroundQuickLook",
        key.usr: "s:vSi25customPlaygroundQuickLookOs19PlaygroundQuickLook::SYNTHESIZED::s:O4cake6MyEnum",
        key.original_usr: "s:vSi25customPlaygroundQuickLookOs19PlaygroundQuickLook",
        key.offset: 1725,
        key.length: 58,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>customPlaygroundQuickLook</decl.name>: <decl.var.type><ref.enum usr=\"s:Os19PlaygroundQuickLook\">PlaygroundQuickLook</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.var.instance,
            key.name: "customPlaygroundQuickLook",
            key.usr: "s:vPs29CustomPlaygroundQuickLookable25customPlaygroundQuickLookOs19PlaygroundQuickLook"
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.enum,
    key.offset: 1787,
    key.length: 30,
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "CVarArg",
        key.usr: "s:Ps7CVarArg"
      }
    ],
    key.extends: {
      key.kind: source.lang.swift.ref.enum,
      key.name: "MyEnum",
      key.usr: "s:O4cake6MyEnum"
    }
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "P2",
    key.usr: "s:P4cake2P2",
    key.offset: 1819,
    key.length: 47,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>P2</decl.name></decl.protocol>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo1()",
        key.usr: "s:FP4cake2P24foo1FT_T_",
        key.offset: 1844,
        key.length: 20,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo1</decl.name>()</decl.function.method.instance>",
        key.is_optional: 1
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "Prot",
    key.usr: "s:P4cake4Prot",
    key.offset: 1868,
    key.length: 102,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Prot</decl.name></decl.protocol>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.associatedtype,
        key.name: "Element",
        key.usr: "s:P4cake4Prot7Element",
        key.offset: 1889,
        key.length: 22,
        key.fully_annotated_decl: "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Element</decl.name></decl.associatedtype>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "p",
        key.usr: "s:vP4cake4Prot1pSi",
        key.offset: 1917,
        key.length: 18,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>p</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo()",
        key.usr: "s:FP4cake4Prot3fooFT_T_",
        key.offset: 1941,
        key.length: 10,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo1()",
        key.usr: "s:FP4cake4Prot4foo1FT_T_",
        key.offset: 1957,
        key.length: 11,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo1</decl.name>()</decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.protocol,
    key.offset: 1972,
    key.length: 35,
    key.extends: {
      key.kind: source.lang.swift.ref.protocol,
      key.name: "Prot",
      key.usr: "s:P4cake4Prot"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo1()",
        key.usr: "s:FE4cakePS_4Prot4foo1FT_T_",
        key.default_implementation_of: "s:FP4cake4Prot4foo1FT_T_",
        key.offset: 1994,
        key.length: 11,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo1</decl.name>()</decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.protocol,
    key.generic_requirements: [
      {
        key.description: "Self.Element == Int"
      }
    ],
    key.offset: 2009,
    key.length: 63,
    key.extends: {
      key.kind: source.lang.swift.ref.protocol,
      key.name: "Prot",
      key.usr: "s:P4cake4Prot"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "extfoo()",
        key.usr: "s:Fe4cakeRxS_4Protwx7ElementzSirS0_6extfooFT_T_",
        key.offset: 2057,
        key.length: 13,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>extfoo</decl.name>()</decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "S1",
    key.usr: "s:V4cake2S1",
    key.offset: 2074,
    key.length: 142,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>S1</decl.name></decl.struct>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.enum,
        key.name: "SE",
        key.usr: "s:OV4cake2S12SE",
        key.offset: 2091,
        key.length: 63,
        key.fully_annotated_decl: "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>SE</decl.name></decl.enum>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.enumelement,
            key.name: "a",
            key.usr: "s:FOV4cake2S12SE1aFMS1_S1_",
            key.offset: 2110,
            key.length: 6,
            key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>a</decl.name></decl.enumelement>"
          },
          {
            key.kind: source.lang.swift.decl.enumelement,
            key.name: "b",
            key.usr: "s:FOV4cake2S12SE1bFMS1_S1_",
            key.offset: 2126,
            key.length: 6,
            key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>b</decl.name></decl.enumelement>"
          },
          {
            key.kind: source.lang.swift.decl.enumelement,
            key.name: "c",
            key.usr: "s:FOV4cake2S12SE1cFMS1_S1_",
            key.offset: 2142,
            key.length: 6,
            key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>c</decl.name></decl.enumelement>"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo1()",
        key.usr: "s:FV4cake2S14foo1FT_T_",
        key.offset: 2160,
        key.length: 11,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo1</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.struct,
        key.name: "S2",
        key.usr: "s:VV4cake2S12S2",
        key.offset: 2177,
        key.length: 37,
        key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>S2</decl.name></decl.struct>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.instance,
            key.name: "b",
            key.usr: "s:vVV4cake2S12S21bSi",
            key.offset: 2198,
            key.length: 10,
            key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>b</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>"
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "genfoo(x:y:)",
    key.usr: "s:F4cake6genfoou0_RxS_4Prot_CS_2C1wx7ElementzSirFT1xx1yq__T_",
    key.generic_params: [
      {
        key.name: "T1",
        key.inherits: "Prot"
      },
      {
        key.name: "T2",
        key.inherits: "C1"
      }
    ],
    key.generic_requirements: [
      {
        key.description: "T1.Element == Int"
      },
      {
        key.description: "T2.Element == T1.Element"
      }
    ],
    key.offset: 2218,
    key.length: 106,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>genfoo</decl.name>&lt;<decl.generic_type_param usr=\"s:tF4cake6genfoou0_RxS_4Prot_CS_2C1wx7ElementzSirFT1xx1yq__T_L_2T1Mx\"><decl.generic_type_param.name>T1</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:P4cake4Prot\">Prot</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>, <decl.generic_type_param usr=\"s:tF4cake6genfoou0_RxS_4Prot_CS_2C1wx7ElementzSirFT1xx1yq__T_L_2T2Mq_\"><decl.generic_type_param.name>T2</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:C4cake2C1\">C1</ref.class></decl.generic_type_param.constraint></decl.generic_type_param> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T1.Element == Int</decl.generic_type_requirement>, <decl.generic_type_requirement>T2.Element == T1.Element</decl.generic_type_requirement>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label> <decl.var.parameter.name>ix</decl.var.parameter.name>: <decl.var.parameter.type>T1</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label> <decl.var.parameter.name>iy</decl.var.parameter.name>: <decl.var.parameter.type>T2</decl.var.parameter.type></decl.var.parameter>)</decl.function.free>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "x",
        key.name: "ix",
        key.offset: 2311,
        key.length: 2
      },
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "y",
        key.name: "iy",
        key.offset: 2321,
        key.length: 2
      }
    ]
  }
]
