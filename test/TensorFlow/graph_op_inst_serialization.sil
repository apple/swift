// First parse this and then emit a *.sib. Then read in the *.sib, then recreate
// RUN: %empty-directory(%t)
// RUN: %target-sil-opt %s -emit-sib -o %t/tmp.sib -module-name graph_op
// RUN: %target-sil-opt %t/tmp.sib -o %t/tmp.2.sib -module-name graph_op
// RUN: %target-sil-opt %t/tmp.2.sib -module-name graph_op | %FileCheck %s

import Swift
import TensorFlow

sil [serialized] @test_func : $@convention(thin) () -> () {
// CHECK-LABEL: sil [serialized] @test_func
bb0:
// CHECK-NEXT: bb0
  %0 = graph_op "Dummy1"() : $TensorHandle<Float>
  // CHECK-NEXT: %0 = graph_op "Dummy1"() : $TensorHandle<Float>
  %1 = graph_op "Dummy2"(%0 : $TensorHandle<Float>) : $TensorHandle<Float>
  // CHECK-NEXT: %1 = graph_op "Dummy2"(%0 : $TensorHandle<Float>) : $TensorHandle<Float>
  (%2, %3) = graph_op "Dummy3"(%0 : $TensorHandle<Float>, %1 : $TensorHandle<Float>) : $TensorHandle<Float>, $TensorHandle<Float>
  // CHECK-NEXT: (%2, %3) = graph_op "Dummy3"(%0 : $TensorHandle<Float>, %1 : $TensorHandle<Float>) : $TensorHandle<Float>, $TensorHandle<Float>
  return undef : $()
}
