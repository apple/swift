
/* Generic Signature Changes */
Constructor BinaryFloatingPoint.init(_:) has generic signature change from <Self, Source where Self : BinaryFloatingPoint, Source : BinaryInteger> to <Self, Source where Self : BinaryFloatingPoint, Source : BinaryInteger, Self.RawSignificand : FixedWidthInteger>
Constructor BinaryFloatingPoint.init(exactly:) has generic signature change from <Self, Source where Self : BinaryFloatingPoint, Source : BinaryInteger> to <Self, Source where Self : BinaryFloatingPoint, Source : BinaryInteger, Self.RawSignificand : FixedWidthInteger>
Constructor Double.init(_:) has generic signature change from to <Source where Source : BinaryInteger>
Constructor Float.init(_:) has generic signature change from to <Source where Source : BinaryInteger>
Constructor Float80.init(_:) has generic signature change from to <Source where Source : BinaryInteger>
Func Substring.replaceSubrange(_:with:) has generic signature change from <C where C : Collection, C.Element == Character> to <C where C : Collection, C.Element == Substring.Iterator.Element>
Protocol BinaryInteger has generic signature change from <Self : CustomStringConvertible, Self : Hashable, Self : Numeric, Self : Strideable, Self.Magnitude : BinaryInteger, Self.Magnitude == Self.Magnitude.Magnitude, Self.Words : Sequence, Self.Words.Element == UInt> to <Self : CustomStringConvertible, Self : Hashable, Self : Numeric, Self : Strideable, Self.Magnitude : BinaryInteger, Self.Magnitude == Self.Magnitude.Magnitude, Self.Words : RandomAccessCollection, Self.Words.Element == UInt, Self.Words.Index == Int>
/* RawRepresentable Changes */

/* Removed Decls */
Constructor Double.init(exactly:) has been removed
Constructor Float.init(exactly:) has been removed
Constructor Float80.init(exactly:) has been removed
Constructor FloatingPoint.init(_:) has been removed
Constructor Int.init(truncatingBitPattern:) has been removed
Constructor Int16.init(truncatingBitPattern:) has been removed
Constructor Int32.init(truncatingBitPattern:) has been removed
Constructor Int8.init(truncatingBitPattern:) has been removed
Constructor String.init(_:obsoletedInSwift4:) has been removed
Constructor UInt.init(truncatingBitPattern:) has been removed
Constructor UInt16.init(truncatingBitPattern:) has been removed
Constructor UInt32.init(truncatingBitPattern:) has been removed
Constructor UInt8.init(truncatingBitPattern:) has been removed
Func BinaryInteger.toIntMax() has been removed
Func FixedWidthInteger.addWithOverflow(_:_:) has been removed
Func FixedWidthInteger.divideWithOverflow(_:_:) has been removed
Func FixedWidthInteger.multiplyWithOverflow(_:_:) has been removed
Func FixedWidthInteger.remainderWithOverflow(_:_:) has been removed
Func FixedWidthInteger.subtractWithOverflow(_:_:) has been removed
Func FixedWidthInteger.unsafeAdding(_:) has been removed
Func FixedWidthInteger.unsafeDivided(by:) has been removed
Func FixedWidthInteger.unsafeMultiplied(by:) has been removed
Func FixedWidthInteger.unsafeSubtracting(_:) has been removed
Func FloatingPoint.abs(_:) has been removed (deprecated)
Func FloatingPoint.add(_:) has been removed
Func FloatingPoint.adding(_:) has been removed
Func FloatingPoint.divide(by:) has been removed
Func FloatingPoint.divided(by:) has been removed
Func FloatingPoint.multiplied(by:) has been removed
Func FloatingPoint.multiply(by:) has been removed
Func FloatingPoint.negated() has been removed
Func FloatingPoint.subtract(_:) has been removed
Func FloatingPoint.subtracting(_:) has been removed
Func Int.toUIntMax() has been removed
Func Int16.toUIntMax() has been removed
Func Int32.toUIntMax() has been removed
Func Int64.toUIntMax() has been removed
Func Int8.toUIntMax() has been removed
Func Sequence.flatMap(_:) has been removed
Func SignedNumeric.abs(_:) has been removed
Func String.UTF16View.distance(from:to:) has been removed
Func String.UTF16View.index(_:offsetBy:) has been removed
Func String.UTF16View.index(after:) has been removed
Func String.UTF8View.distance(from:to:) has been removed
Func String.UTF8View.index(_:offsetBy:) has been removed
Func String.UTF8View.index(after:) has been removed
Func String.UnicodeScalarView.distance(from:to:) has been removed
Func String.UnicodeScalarView.index(_:offsetBy:) has been removed
Func String.UnicodeScalarView.index(after:) has been removed
Func String.UnicodeScalarView.popFirst() has been removed (deprecated)
Func String.popFirst() has been removed (deprecated)
Func UInt.toIntMax() has been removed
Func UInt16.toIntMax() has been removed
Func UInt32.toIntMax() has been removed
Func UInt64.toIntMax() has been removed
Func UInt8.toIntMax() has been removed
Func UnsignedInteger.toUIntMax() has been removed
TypeAlias AbsoluteValuable has been removed
TypeAlias BitwiseOperations has been removed (deprecated)
TypeAlias IntMax has been removed
TypeAlias Integer has been removed
TypeAlias IntegerArithmetic has been removed
TypeAlias SignedNumber has been removed
TypeAlias StringProtocol.UTF16Index has been removed (deprecated)
TypeAlias StringProtocol.UTF8Index has been removed (deprecated)
TypeAlias StringProtocol.UnicodeScalarIndex has been removed (deprecated)
TypeAlias UIntMax has been removed
Var FixedWidthInteger.allZeros has been removed (deprecated)

/* Moved Decls */

/* Renamed Decls */
Func Dictionary.filter(_:obsoletedInSwift4:) has been renamed to Func Dictionary.filter(_:)
Func Set.filter(_:obsoletedInSwift4:) has been renamed to Func Set.filter(_:)

/* Type Changes */
Constructor Double.init(_:) has parameter 0 type change from UInt8 to Source
Constructor Float.init(_:) has parameter 0 type change from UInt8 to Source
Constructor Float80.init(_:) has parameter 0 type change from UInt8 to Source
Constructor Mirror.init(_:children:displayStyle:ancestorRepresentation:) has parameter 1 type change from DictionaryLiteral<String, Any> to KeyValuePairs<String, Any>
Constructor String.init(_:) has return type change from String? to String
Func Dictionary.filter(_:obsoletedInSwift4:) has return type change from [Dictionary<Key, Value>.Element] to [Dictionary<Key, Value>.Key : Dictionary<Key, Value>.Value]
Func Dictionary.makeIterator() has return type change from DictionaryIterator<Dictionary<Key, Value>.Key, Dictionary<Key, Value>.Value> to Dictionary<Key, Value>.Iterator
Func Set.filter(_:obsoletedInSwift4:) has return type change from [Set<Element>.Element] to Set<Element>
Func Set.makeIterator() has return type change from SetIterator<Element> to Set<Element>.Iterator
Var Dictionary.keys has declared type change from LazyMapCollection<[Key : Value], Key> to Dictionary<Key, Value>.Keys
Var Dictionary.values has declared type change from LazyMapCollection<[Key : Value], Value> to Dictionary<Key, Value>.Values


/* Decl Attribute changes */

/* Protocol Requirement Changes */
AssociatedType BinaryFloatingPoint.RawExponent has been added as a protocol requirement
AssociatedType BinaryFloatingPoint.RawSignificand has been added as a protocol requirement
AssociatedType BinaryInteger.Words has been added as a protocol requirement
AssociatedType CaseIterable.AllCases has been added as a protocol requirement
AssociatedType Collection.Index has been added as a protocol requirement
AssociatedType ExpressibleByArrayLiteral.ArrayLiteralElement has been added as a protocol requirement
AssociatedType ExpressibleByBooleanLiteral.BooleanLiteralType has been added as a protocol requirement
AssociatedType ExpressibleByDictionaryLiteral.Key has been added as a protocol requirement
AssociatedType ExpressibleByDictionaryLiteral.Value has been added as a protocol requirement
AssociatedType ExpressibleByExtendedGraphemeClusterLiteral.ExtendedGraphemeClusterLiteralType has been added as a protocol requirement
AssociatedType ExpressibleByFloatLiteral.FloatLiteralType has been added as a protocol requirement
AssociatedType ExpressibleByIntegerLiteral.IntegerLiteralType has been added as a protocol requirement
AssociatedType ExpressibleByStringLiteral.StringLiteralType has been added as a protocol requirement
AssociatedType ExpressibleByUnicodeScalarLiteral.UnicodeScalarLiteralType has been added as a protocol requirement
AssociatedType FloatingPoint.Exponent has been added as a protocol requirement
AssociatedType IteratorProtocol.Element has been added as a protocol requirement
AssociatedType KeyedDecodingContainerProtocol.Key has been added as a protocol requirement
AssociatedType KeyedEncodingContainerProtocol.Key has been added as a protocol requirement
AssociatedType Numeric.Magnitude has been added as a protocol requirement
AssociatedType RangeExpression.Bound has been added as a protocol requirement
AssociatedType RawRepresentable.RawValue has been added as a protocol requirement
AssociatedType Sequence.Element has been added as a protocol requirement
AssociatedType Sequence.Iterator has been added as a protocol requirement
AssociatedType SetAlgebra.Element has been added as a protocol requirement
AssociatedType Strideable.Stride has been added as a protocol requirement
AssociatedType StringProtocol.UTF16View has been added as a protocol requirement
AssociatedType StringProtocol.UTF8View has been added as a protocol requirement
AssociatedType StringProtocol.UnicodeScalarView has been added as a protocol requirement
AssociatedType _SequenceWrapper.Base has been added as a protocol requirement


// These operator changes are false positive because the baseline doesn't have operators.
Func BinaryInteger.%(_:_:) has been added as a protocol requirement
Func BinaryInteger.%=(_:_:) has been added as a protocol requirement
Func BinaryInteger.&(_:_:) has been added as a protocol requirement
Func BinaryInteger.&=(_:_:) has been added as a protocol requirement
Func BinaryInteger.<<(_:_:) has been added as a protocol requirement
Func BinaryInteger.<<=(_:_:) has been added as a protocol requirement
Func BinaryInteger.>>(_:_:) has been added as a protocol requirement
Func BinaryInteger.>>=(_:_:) has been added as a protocol requirement
Func BinaryInteger.\/(_:_:) has been added as a protocol requirement
Func BinaryInteger.\/=(_:_:) has been added as a protocol requirement
Func BinaryInteger.^(_:_:) has been added as a protocol requirement
Func BinaryInteger.^=(_:_:) has been added as a protocol requirement
Func BinaryInteger.isMultiple(of:) has been added as a protocol requirement
Func BinaryInteger.|(_:_:) has been added as a protocol requirement
Func BinaryInteger.|=(_:_:) has been added as a protocol requirement
Func BinaryInteger.~(_:) has been added as a protocol requirement
Func Comparable.<(_:_:) has been added as a protocol requirement
Func Comparable.<=(_:_:) has been added as a protocol requirement
Func Comparable.>(_:_:) has been added as a protocol requirement
Func Comparable.>=(_:_:) has been added as a protocol requirement
Func Equatable.==(_:_:) has been added as a protocol requirement
Func FixedWidthInteger.&<<(_:_:) has been added as a protocol requirement
Func FixedWidthInteger.&<<=(_:_:) has been added as a protocol requirement
Func FixedWidthInteger.&>>(_:_:) has been added as a protocol requirement
Func FixedWidthInteger.&>>=(_:_:) has been added as a protocol requirement
Func FloatingPoint.\/(_:_:) has been added as a protocol requirement
Func FloatingPoint.\/=(_:_:) has been added as a protocol requirement
Func Numeric.*(_:_:) has been added as a protocol requirement
Func Numeric.*=(_:_:) has been added as a protocol requirement
Func Numeric.+(_:_:) has been added as a protocol requirement
Func Numeric.+=(_:_:) has been added as a protocol requirement
Func Numeric.-(_:_:) has been added as a protocol requirement
Func Numeric.-=(_:_:) has been added as a protocol requirement
Func SignedNumeric.-(_:) has been added as a protocol requirement

// The subscript changes are bogus because we don't have subscript decls in the baseline.
Subscript Collection.subscript(_:) has been added as a protocol requirement
